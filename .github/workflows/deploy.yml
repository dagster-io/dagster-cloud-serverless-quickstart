name: Serverless Prod Deployment
on:
  push:
    branches:
      - "main"
      - "master"
      - "benpankow/pex-deploy-using-cli"

concurrency:
  # Cancel in-progress deploys to same branch
  group: ${{ github.ref }}/deploy
  cancel-in-progress: true
env:
  DAGSTER_CLOUD_URL: "http://elementl-serverless-test.dagster.cloud"
  DAGSTER_CLOUD_API_TOKEN: ${{ secrets.DAGSTER_CLOUD_API_TOKEN }}
  ENABLE_FAST_DEPLOYS: 'false'
  PYTHON_VERSION: '3.8'
  DAGSTER_CLOUD_ORGANIZATION: "elementl-serverless-test"
  DAGSTER_CLOUD_FILE: 'dagster_cloud.yaml'
  # Path to the root folder containing the dagster project
  DAGSTER_PROJECT_DIR: "."
  # Path to dagster_cloud.yaml relative to DAGSTER_PROJECT_DIR
  DAGSTER_CLOUD_YAML_PATH: "dagster_cloud.yaml"

jobs:
  dagster_cloud_default_deploy:
    name: Dagster Serverless Deploy
    runs-on: ubuntu-20.04
    outputs:
      build_info: ${{ steps.parse-workspace.outputs.build_info }}

    steps:
      - name: Prerun Checks
        id: prerun
        uses: dagster-io/dagster-cloud-action/actions/utils/prerun@v0.1

      - name: Launch Docker Deploy
        if: steps.prerun.outputs.result == 'docker-deploy'
        id: parse-workspace
        uses: dagster-io/dagster-cloud-action/actions/utils/parse_workspace@v0.1
        with:
          dagster_cloud_file: $DAGSTER_CLOUD_FILE

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      # Parse dagster_cloud.yaml, detect if this is branch deployment and initialize the build session
      - name: Initialize build session
        id: ci-init
        uses: dagster-io/dagster-cloud-action/actions/utils/ci-init@v0.1
        with:
          project_dir: ${{ env.DAGSTER_PROJECT_DIR }}
          dagster_cloud_yaml_path: ${{ env.DAGSTER_CLOUD_YAML_PATH }}
          # The full deployment name. If this run is for a PR, this value is ignored and a branch
          # deployment is used.
          deployment: 'prod'


      # If using fast build, build the PEX
      - name: Run PEX build
        id: run-pex-build
        if: steps.prerun.outputs.result == 'pex-deploy'
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@v0.1
        with:
          command: "ci build --build-strategy=python-executable --python-version ${{ env.PYTHON_VERSION }}"


      # Enable buildx for caching
      - name: Set up Docker Buildx
        if: steps.prerun.outputs.result == 'docker-deploy'
        uses: docker/setup-buildx-action@v2

      - name: Run Docker build
        id: run-docker-build
        if: steps.prerun.outputs.result == 'docker-deploy'
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@v0.1
        with:
          command: "ci build --build-strategy=docker"

      # Deploy all code locations in this build session to Dagster Cloud
      - name: Deploy to Dagster Cloud
        id: ci-deploy
        if: steps.prerun.outputs.result != 'skip'
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@v0.1
        with:
          command: "ci deploy"
